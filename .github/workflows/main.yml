name: Multi-Stage Promotion

on:
  push:
    branches:
      - test
      - dev
      - qa
      - prod
  workflow_dispatch:

jobs:
  promote:
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Git
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SFTP_PRIVATE_KEY }}" > ~/.ssh/airflow_deploy_key
          chmod 600 ~/.ssh/airflow_deploy_key
          ssh-keyscan -H 20.1.156.227 >> ~/.ssh/known_hosts
          ssh-keyscan -H 20.41.12.28 >> ~/.ssh/known_hosts
          ssh-keyscan -H 20.57.59.31 >> ~/.ssh/known_hosts

      # Step1 → Step2: Promote TEST → DEV
      - name: Promote test → dev
        if: github.ref == 'refs/heads/test'
        run: |
          git checkout dev
          git merge --no-ff test -m "Promote test → dev"
          git push origin dev

      # Step3: Sync DEV branch → DEV server
      - name: Sync DEV to server
        if: github.ref == 'refs/heads/test'
        run: |
          ssh -i ~/.ssh/airflow_deploy_key -o StrictHostKeyChecking=no airflow@20.1.156.227 "mkdir -p /app"
          sftp -i ~/.ssh/airflow_deploy_key -o StrictHostKeyChecking=no airflow@20.1.156.227 <<EOF
          put -r * /app/
          bye
          EOF

      # Step4: Promote DEV → QA
      - name: Promote dev → qa
        if: github.ref == 'refs/heads/dev'
        run: |
          git checkout qa
          git merge --no-ff dev -m "Promote dev → qa"
          git push origin qa

      # Step5: Sync QA branch → QA server
      - name: Sync QA to server
        if: github.ref == 'refs/heads/dev'
        run: |
          ssh -i ~/.ssh/airflow_deploy_key -o StrictHostKeyChecking=no airflow@20.41.12.28 "mkdir -p /app"
          sftp -i ~/.ssh/airflow_deploy_key -o StrictHostKeyChecking=no airflow@20.41.12.28 <<EOF
          put -r * /app/
          bye
          EOF

      # Step6: Promote QA → PROD (after approval)
      - name: Wait for Approval (QA → PROD)
        if: github.ref == 'refs/heads/qa'
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: user1,user2  # Replace with actual GitHub usernames
          minimum-approvals: 1
          issue-title: "Approval required: Promote QA → PROD"

      - name: Promote qa → prod
        if: github.ref == 'refs/heads/qa'
        run: |
          git checkout prod
          git merge --no-ff qa -m "Promote qa → prod"
          git push origin prod

      # Step7: Notify NOC (GitHub issue)
      - name: Notify NOC
        if: github.ref == 'refs/heads/qa'
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "QA → PROD Promotion Approved"
          content-filepath: ./README.md   # Replace with a summary file if you like
          labels: NOC

  # Step8: NOC can run PROD sync manually
  sync-prod:
    runs-on: self-hosted
    needs: promote
    if: github.ref == 'refs/heads/prod'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SFTP_PRIVATE_KEY }}" > ~/.ssh/airflow_deploy_key
          chmod 600 ~/.ssh/airflow_deploy_key
          ssh-keyscan -H 20.57.59.31 >> ~/.ssh/known_hosts

      - name: Sync PROD to server
        run: |
          ssh -i ~/.ssh/airflow_deploy_key -o StrictHostKeyChecking=no airflow@20.57.59.31 "mkdir -p /app"
          sftp -i ~/.ssh/airflow_deploy_key -o StrictHostKeyChecking=no airflow@20.57.59.31 <<EOF
          put -r * /app/
          bye
          EOF
