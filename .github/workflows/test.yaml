name: Dynamic Deployment Pipeline

on:
  push:
    branches:
      - Test
      - QA
      - Dev
      - Prod
  workflow_dispatch:

permissions:
  contents: write

jobs:
  detect-changes:
    name: Detect Changed Files
    runs-on: self-hosted
    outputs:
      files: ${{ steps.get-changes.outputs.files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files using Git history
        id: get-changes
        run: |
          echo "🔍 Detecting changed files..."
          PREV_COMMIT=$(git rev-parse HEAD^1)
          CURR_COMMIT=$(git rev-parse HEAD)
          echo "Previous commit: $PREV_COMMIT"
          echo "Current commit: $CURR_COMMIT"
          CHANGED_FILES=$(git diff --name-only $PREV_COMMIT $CURR_COMMIT | tr '\n' ' ')
          echo "Changed files: $CHANGED_FILES"
          echo "files=$CHANGED_FILES" >> $GITHUB_OUTPUT

  deploy-to-test:
    if: github.ref == 'refs/heads/Test'
    needs: detect-changes
    runs-on: self-hosted
    environment: Test
    steps:
      - name: Deploy to Test
        run: |
          echo "🚀 Deploying to Test..."
          for file in ${{ needs.detect-changes.outputs.files }}; do
            echo "put -r \"$file\" \"/opt/app/pvcs/$file\"" > deploy_script.txt
            echo "bye" >> deploy_script.txt
            sftp -i /home/azure/.ssh/airflow_deploy_key airflow@20.41.12.28 < deploy_script.txt
          done

  promote-to-qa:
    if: github.ref == 'refs/heads/Test'
    needs: deploy-to-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Promote Test → QA
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git fetch origin
          git checkout QA
          git merge origin/Test --no-edit
          git push origin QA

  deploy-to-qa:
    if: github.ref == 'refs/heads/QA'
    needs: [detect-changes, promote-to-qa]
    runs-on: self-hosted
    environment: QA
    steps:
      - name: Deploy to QA
        run: |
          echo "🚀 Deploying to QA..."
          for file in ${{ needs.detect-changes.outputs.files }}; do
            echo "put -r \"$file\" \"/opt/app/pvcs/$file\"" > deploy_script.txt
            echo "bye" >> deploy_script.txt
            sftp -i /home/azure/.ssh/airflow_deploy_key airflow@20.41.12.28 < deploy_script.txt
          done

  promote-to-dev:
    if: github.ref == 'refs/heads/QA'
    needs: deploy-to-qa
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Promote QA → Dev
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git fetch origin
          git checkout Dev
          git merge origin/QA --no-edit
          git push origin Dev

  deploy-to-dev:
    if: github.ref == 'refs/heads/Dev'
    needs: [detect-changes, promote-to-dev]
    runs-on: self-hosted
    environment: Dev
    steps:
      - name: Deploy to Dev
        run: |
          echo "🚀 Deploying to Dev..."
          for file in ${{ needs.detect-changes.outputs.files }}; do
            echo "put -r \"$file\" \"/opt/app/pvcs/$file\"" > deploy_script.txt
            echo "bye" >> deploy_script.txt
            sftp -i /home/azure/.ssh/airflow_deploy_key airflow@20.1.156.227 < deploy_script.txt
          done

  promote-to-prod:
    if: github.ref == 'refs/heads/Dev'
    needs: deploy-to-dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Promote Dev → Prod
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git fetch origin
          git checkout Prod
          git merge origin/Dev --no-edit
          git push origin Prod

  deploy-to-prod:
    if: github.ref == 'refs/heads/Prod'
    needs: [detect-changes, promote-to-prod]
    runs-on: self-hosted
    environment: Prod
    steps:
      - name: Deploy to Prod
        run: |
          echo "🚀 Deploying to Prod..."
          for file in ${{ needs.detect-changes.outputs.files }}; do
            echo "put -r \"$file\" \"/opt/app/pvcs/$file\"" > deploy_script.txt
            echo "bye" >> deploy_script.txt
            sftp -i /home/azure/.ssh/airflow_deploy_key airflow@20.41.12.28 < deploy_script.txt
          done
