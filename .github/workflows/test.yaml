name: Dynamic Deployment Pipeline

on:
  push:
    branches:
      - Test
      - QA
      - Dev
      - Prod
  workflow_dispatch:

permissions:
  contents: write

jobs:

          CURR_COMMIT=$(git rev-parse HEAD)
          echo "Previous commit: $PREV_COMMIT"
          echo "Current commit: $CURR_COMMIT"
          CHANGED_FILES=$(git diff --name-only $PREV_COMMIT $CURR_COMMIT | tr '\n' ' ')
          echo "Changed files: $CHANGED_FILES"
          echo "files=$CHANGED_FILES" >> $GITHUB_OUTPUT


  deploy-to-test:
    if: github.ref == 'refs/heads/Test'
    needs: detect-changes
    runs-on: self-hosted
    environment: Test
    steps:

      - name: Deploy to Test
        run: |
          echo "ðŸš€ Deploying to Test..."
          for file in ${{ needs.detect-changes.outputs.files }}; do
            echo "put -r \"$file\" \"/opt/app/pvcs/$file\"" > deploy_script.txt
            echo "bye" >> deploy_script.txt

          done

  promote-to-qa:
    if: github.ref == 'refs/heads/Test'
    needs: deploy-to-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Promote Test â†’ QA
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git fetch origin
          git checkout QA

      - name: Deploy to QA
        run: |
          echo "ðŸš€ Deploying to QA..."
          for file in ${{ needs.detect-changes.outputs.files }}; do
            echo "put -r \"$file\" \"/opt/app/pvcs/$file\"" > deploy_script.txt
            echo "bye" >> deploy_script.txt
          done

  promote-to-dev:
    if: github.ref == 'refs/heads/QA'
    needs: deploy-to-qa
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Promote QA â†’ Dev
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git fetch origin
          git checkout Dev

      - name: Deploy to Dev
        run: |
          echo "ðŸš€ Deploying to Dev..."
          for file in ${{ needs.detect-changes.outputs.files }}; do
            echo "put -r \"$file\" \"/opt/app/pvcs/$file\"" > deploy_script.txt
            echo "bye" >> deploy_script.txt

          done

  promote-to-prod:
    if: github.ref == 'refs/heads/Dev'
    needs: deploy-to-dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Promote Dev â†’ Prod
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git fetch origin
          git checkout Prod

      - name: Deploy to Prod
        run: |
          echo "ðŸš€ Deploying to Prod..."
          for file in ${{ needs.detect-changes.outputs.files }}; do
            echo "put -r \"$file\" \"/opt/app/pvcs/$file\"" > deploy_script.txt
            echo "bye" >> deploy_script.txt
          done
