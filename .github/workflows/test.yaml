name: Branch Promotion Pipeline

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  promote-dev:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Force overwrite dev with test
        run: |
          git config user.name "ci-bot"
          git config user.email "ci-bot@example.com"
          git fetch origin
          git checkout dev || git checkout -b dev origin/dev
          git reset --hard origin/test
          git push origin dev --force

  deploy-dev:
    runs-on: self-hosted
    needs: promote-dev
    steps:
      - name: Checkout dev branch
        uses: actions/checkout@v4

      - name: Install sshpass
        run: |
          if ! command -v sshpass &> /dev/null; then
            sudo apt-get update && sudo apt-get install -y sshpass
          fi

      - name: Sync to Dev Server (20.1.156.227)
        env:
          DEV_PASSWORD: ${{ secrets.DEV_SERVER_PASSWORD }}
        run: |
          sshpass -p "$DEV_PASSWORD" rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./ airflow@20.1.156.227:/app/
          sshpass -p "$DEV_PASSWORD" ssh -o StrictHostKeyChecking=no airflow@20.1.156.227 "ls -l /app/"

  promote-qa:
    runs-on: self-hosted
    needs: deploy-dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Force overwrite qa with dev
        run: |
          git config user.name "ci-bot"
          git config user.email "ci-bot@example.com"
          git fetch origin
          git checkout qa || git checkout -b qa origin/qa
          git reset --hard origin/dev
          git push origin qa --force

  deploy-qa:
    runs-on: self-hosted
    needs: promote-qa
    steps:
      - name: Checkout qa branch
        uses: actions/checkout@v4

      - name: Install sshpass
        run: |
          if ! command -v sshpass &> /dev/null; then
            sudo apt-get update && sudo apt-get install -y sshpass
          fi

      - name: Sync to QA Server (20.41.12.28)
        env:
          QA_PASSWORD: ${{ secrets.QA_SERVER_PASSWORD }}
        run: |
          sshpass -p "$QA_PASSWORD" rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./ airflow@20.41.12.28:/app/
          sshpass -p "$QA_PASSWORD" ssh -o StrictHostKeyChecking=no airflow@20.41.12.28 "ls -l /app/"

  promote-prod:
    runs-on: self-hosted
    needs: deploy-qa
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Force overwrite prod with qa
        run: |
          git config user.name "ci-bot"
          git config user.email "ci-bot@example.com"
          git fetch origin
          git checkout prod || git checkout -b prod origin/prod
          git reset --hard origin/qa
          git push origin prod --force

  notify-noc:
    runs-on: self-hosted
    needs: promote-prod
    steps:
      - name: Notify NOC Team
        run: |
          echo "âœ… NOC Team: Prod branch is ready for deployment on 20.57.59.31"
          # Optionally integrate Slack/Teams/Email here

  deploy-prod:
    runs-on: self-hosted
    needs: notify-noc
    environment: production   # ðŸ‘ˆ requires manual approval before running
    steps:
      - name: Checkout prod branch
        uses: actions/checkout@v4

      - name: Install sshpass
        run: |
          if ! command -v sshpass &> /dev/null; then
            sudo apt-get update && sudo apt-get install -y sshpass
          fi

      - name: Sync to Prod Server (20.57.59.31)
        env:
          PROD_PASSWORD: ${{ secrets.PROD_SERVER_PASSWORD }}
        run: |
          sshpass -p "$PROD_PASSWORD" rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./ airflow@20.57.59.31:/app/
          sshpass -p "$PROD_PASSWORD" ssh -o StrictHostKeyChecking=no airflow@20.57.59.31 "ls -l /app/"
