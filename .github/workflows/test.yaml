name: Dynamic Deployment Pipeline

on:
  push:
    branches:
      - Test
      - QA
      - Dev
      - Prod
  workflow_dispatch:

permissions:
  contents: write

jobs:
  detect-changes:
    name: Detect Changed Files
    runs-on: self-hosted
    outputs:
      files: ${{ steps.get-changes.outputs.files }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: get-changes
        run: |
          echo "🔍 Detecting changed files..."
          PREV_COMMIT=$(git rev-parse HEAD^)
          CURR_COMMIT=$(git rev-parse HEAD)
          echo "Previous commit: $PREV_COMMIT"
          echo "Current commit: $CURR_COMMIT"
          CHANGED_FILES=$(git diff --name-only $PREV_COMMIT $CURR_COMMIT | tr '\n' ' ')
          echo "Changed files: $CHANGED_FILES"
          echo "files=$CHANGED_FILES" >> $GITHUB_OUTPUT

  deploy-to-test:
    if: github.ref == 'refs/heads/Test'
    needs: detect-changes
    runs-on: self-hosted
    environment: Test
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
      - name: Deploy to Test
        if: needs.detect-changes.outputs.files != ''
        run: |
          echo "🚀 Deploying to Test..."
          rm -f deploy_script.txt
          for file in ${{ needs.detect-changes.outputs.files }}; do
            echo "put -r \"$file\" \"/opt/app/pvcs/$file\"" >> deploy_script.txt
          done
          echo "bye" >> deploy_script.txt
          cat deploy_script.txt
          sftp -o StrictHostKeyChecking=no -i ~/.ssh/airflow_deploy_key -b deploy_script.txt airflow@20.41.12.28
      - name: Skip Deploy
        if: needs.detect-changes.outputs.files == ''
        run: echo "✅ No files changed, skipping Test deploy"

  promote-to-qa:
    if: github.ref == 'refs/heads/Test'
    needs: deploy-to-test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Promote Test → QA
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git fetch origin
          git checkout QA
          if git diff --quiet origin/QA origin/Test; then
            echo "✅ No changes to promote"
          else
            git merge origin/Test --no-edit
            git push origin QA
          fi

  deploy-to-qa:
    if: github.ref == 'refs/heads/QA'
    needs: detect-changes
    runs-on: self-hosted
    environment: QA
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
      - name: Deploy to QA
        if: needs.detect-changes.outputs.files != ''
        run: |
          echo "🚀 Deploying to QA..."
          rm -f deploy_script.txt
          for file in ${{ needs.detect-changes.outputs.files }}; do
            echo "put -r \"$file\" \"/opt/app/pvcs/$file\"" >> deploy_script.txt
          done
          echo "bye" >> deploy_script.txt
          cat deploy_script.txt
          sftp -o StrictHostKeyChecking=no -i ~/.ssh/airflow_deploy_key -b deploy_script.txt airflow@20.41.12.28
      - name: Skip Deploy
        if: needs.detect-changes.outputs.files == ''
        run: echo "✅ No files changed, skipping QA deploy"

  promote-to-dev:
    if: github.ref == 'refs/heads/QA'
    needs: deploy-to-qa
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Promote QA → Dev
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git fetch origin
          git checkout Dev
          if git diff --quiet origin/Dev origin/QA; then
            echo "✅ No changes to promote"
          else
            git merge origin/QA --no-edit
            git push origin Dev
          fi

  deploy-to-dev:
    if: github.ref == 'refs/heads/Dev'
    needs: detect-changes
    runs-on: self-hosted
    environment: Dev
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
      - name: Deploy to Dev
        if: needs.detect-changes.outputs.files != ''
        run: |
          echo "🚀 Deploying to Dev..."
          rm -f deploy_script.txt
          for file in ${{ needs.detect-changes.outputs.files }}; do
            echo "put -r \"$file\" \"/opt/app/pvcs/$file\"" >> deploy_script.txt
          done
          echo "bye" >> deploy_script.txt
          cat deploy_script.txt
          sftp -o StrictHostKeyChecking=no -i ~/.ssh/airflow_deploy_key -b deploy_script.txt airflow@20.1.56.227
      - name: Skip Deploy
        if: needs.detect-changes.outputs.files == ''
        run: echo "✅ No files changed, skipping Dev deploy"

  promote-to-prod:
    if: github.ref == 'refs/heads/Dev'
    needs: deploy-to-dev
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Promote Dev → Prod
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git fetch origin
          git checkout Prod
          if git diff --quiet origin/Prod origin/Dev; then
            echo "✅ No changes to promote"
          else
            git merge origin/Dev --no-edit
            git push origin Prod
          fi

  deploy-to-prod:
    if: github.ref == 'refs/heads/Prod'
    needs: detect-changes
    runs-on: self-hosted
    environment: Prod
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
      - name: Deploy to Prod
        if: needs.detect-changes.outputs.files != ''
        run: |
          echo "🚀 Deploying to Prod..."
          rm -f deploy_script.txt
          for file in ${{ needs.detect-changes.outputs.files }}; do
            echo "put -r \"$file\" \"/opt/app/pvcs/$file\"" >> deploy_script.txt
          done
          echo "bye" >> deploy_script.txt
          cat deploy_script.txt
          sftp -o StrictHostKeyChecking=no -i ~/.ssh/airflow_deploy_key -b deploy_script.txt airflow@20.57.59.31
      - name: Skip Deploy
        if: needs.detect-changes.outputs.files == ''
        run: echo "✅ No files changed, skipping Prod deploy"
